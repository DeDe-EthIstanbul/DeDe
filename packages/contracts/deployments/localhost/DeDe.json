{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_settlementDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stakeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shipmentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "courier",
          "type": "address"
        }
      ],
      "name": "ShipmentCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shipmentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "courier",
          "type": "address"
        }
      ],
      "name": "ShipmentPickedUp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shipmentId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ShipmentRequested",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shipmentId",
          "type": "uint256"
        }
      ],
      "name": "completeShipment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shipmentId",
          "type": "uint256"
        }
      ],
      "name": "disburse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shipmentId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fulfilledShipments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shipmentId",
          "type": "uint256"
        }
      ],
      "name": "pickUpShipment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pickedUpShipments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shipmentCost",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "requestShipment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shipmentId",
          "type": "uint256"
        }
      ],
      "name": "settle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shipments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shipmentCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "settlementDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "courier",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "paidBy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawableBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x61ce5afb920b24d4622e18ed6f77daa21a3b9bd9e9d3e52a23ff754954cda77b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1145542",
    "logsBloom": "0x
    "blockHash": "0xe24a92093dea895a5811b4ffd1dfadec8427db601f3644bced44b0ceda46461b",
    "transactionHash": "0x61ce5afb920b24d4622e18ed6f77daa21a3b9bd9e9d3e52a23ff754954cda77b",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1145542",
    "status": 1,
    "byzantium": true
  },
  "args": [
    0,
    0
  ],
  "numDeployments": 1,
  "solcInputHash": "346000662c107a0d9d10899cf9bd4c7f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_settlementDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"courier\",\"type\":\"address\"}],\"name\":\"ShipmentCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"courier\",\"type\":\"address\"}],\"name\":\"ShipmentPickedUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ShipmentRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shipmentId\",\"type\":\"uint256\"}],\"name\":\"completeShipment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shipmentId\",\"type\":\"uint256\"}],\"name\":\"disburse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shipmentId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"dispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fulfilledShipments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shipmentId\",\"type\":\"uint256\"}],\"name\":\"pickUpShipment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pickedUpShipments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shipmentCost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"requestShipment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shipmentId\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlementDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shipments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shipmentCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"settlementDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"courier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paidBy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawableBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pickUpShipment(uint256)\":{\"details\":\"Pickup a shipment\"},\"requestShipment(uint256,address,address)\":{\"details\":\"Request a shipment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"completeShipment(uint256)\":{\"notice\":\"TODO: Add attestations \"},\"disburse(uint256)\":{\"notice\":\"Called by the receiver. Only if the receiver is happy with the shipment, the courier gets paid.\"},\"dispute(uint256,address)\":{\"notice\":\"Receiver or courier is unhappy, can file a dispute\"},\"settle(uint256)\":{\"notice\":\"If nobody did anything after the deadline, then the settlement can be made Anyone can call this. In the future, you can incentivize by giving a cut to the caller\"},\"withdraw()\":{\"notice\":\"Withdraw balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeDe.sol\":\"DeDe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DeDe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract DeDe {\\n    uint public settlementDuration;\\n    uint public stakeAmount;\\n    uint public currentId;\\n    mapping(uint => Shipment) public shipments;\\n    mapping(uint => bool) public pickedUpShipments;\\n    mapping(uint => bool) public fulfilledShipments;\\n    mapping(address => uint) public withdrawableBalance;\\n    address payable public owner;\\n\\n    struct Shipment {\\n        uint id;\\n        uint shipmentCost; // Earnings for courier when shipment is done\\n        uint settlementDeadline; // When should the receiver accept/dispute the shipment as complete\\n        uint stake; // Amount courier staked to make this shipment\\n        address courier;\\n        address sender;\\n        address receiver;\\n        address paidBy;\\n        bool valid;\\n    }\\n\\n    event ShipmentRequested(uint shipmentId, address sender, address receiver);\\n    event ShipmentPickedUp(uint shipmentId, address courier);\\n    event ShipmentCompleted(uint shipmentId, address courier);\\n\\n    constructor(uint _settlementDuration, uint _stakeAmount) payable {\\n        currentId = 0;\\n        stakeAmount = _stakeAmount;\\n        settlementDuration = _settlementDuration;\\n        owner = payable(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Request a shipment\\n     */\\n    function requestShipment(uint _shipmentCost, address _sender, address _receiver) public payable {\\n        require(msg.value >= _shipmentCost, \\\"Shipment cost insufficient\\\");\\n        uint id = currentId;\\n        currentId++;\\n        uint shipmentId = id;\\n\\n        Shipment memory shipment = Shipment(\\n            shipmentId,\\n            _shipmentCost,\\n            block.number + settlementDuration,\\n            stakeAmount,\\n            address(0),\\n            _sender,\\n            _receiver,\\n            msg.sender,\\n            true\\n        );\\n        shipments[shipmentId] = shipment;\\n        emit ShipmentRequested(shipmentId, _sender, _receiver);\\n    }\\n\\n    /**\\n     * @dev Pickup a shipment\\n     */\\n    function pickUpShipment(uint _shipmentId) public payable {\\n        require(pickedUpShipments[_shipmentId] == false, \\\"Shipment has already been picked up\\\");\\n        require(fulfilledShipments[_shipmentId] == false, \\\"Shipment has already been fulfilled\\\");\\n        require(msg.value >= stakeAmount, \\\"Stake amount insufficient\\\");\\n\\n        Shipment memory shipment = shipments[_shipmentId];\\n        require(shipment.valid == true, \\\"Shipment is not valid\\\");\\n        require(shipment.settlementDeadline > block.number, \\\"Shipment has expired\\\");\\n\\n        pickedUpShipments[_shipmentId] = true;\\n        shipment.courier = msg.sender;\\n        shipment.stake = msg.value;\\n        shipments[_shipmentId] = shipment;\\n        emit ShipmentPickedUp(_shipmentId, msg.sender);\\n    }\\n\\n    /** TODO: Add attestations */\\n    function completeShipment(uint _shipmentId) public payable {\\n        require(pickedUpShipments[_shipmentId] == true, \\\"Shipment has not been picked up\\\");\\n        require(fulfilledShipments[_shipmentId] == false, \\\"Shipment has already been fulfilled\\\");\\n\\n        Shipment memory shipment = shipments[_shipmentId];\\n        require(shipment.valid == true, \\\"Shipment is not valid\\\");\\n        require(shipment.settlementDeadline > block.number, \\\"Shipment has expired\\\");\\n        require(shipment.courier == msg.sender, \\\"Sender is not the courier\\\");\\n\\n        fulfilledShipments[_shipmentId] = true;\\n        address payable courier = payable(shipment.courier);\\n\\n        // Return stake to courier\\n        courier.transfer(shipment.stake);\\n        shipments[_shipmentId] = shipment;\\n        emit ShipmentCompleted(_shipmentId, msg.sender);\\n    }\\n\\n    /**\\n     * Receiver or courier is unhappy, can file a dispute\\n     */\\n    function dispute(uint _shipmentId, address disputer) public {\\n        // TODO\\n        // Would need to call to an insurance contract and settle things that way\\n    }\\n\\n    /**\\n     * Called by the receiver. Only if the receiver is happy with the shipment, the courier gets paid.\\n     */\\n    function disburse(uint _shipmentId) public {\\n        require(pickedUpShipments[_shipmentId] == true, \\\"Shipment is not picked up\\\");\\n        require(fulfilledShipments[_shipmentId] == true, \\\"Shipment is not fulfilled\\\");\\n\\n        Shipment memory shipment = shipments[_shipmentId];\\n        require(shipment.valid == true, \\\"Shipment is not valid\\\");\\n        require(shipment.receiver == msg.sender, \\\"Caller is not the receiver\\\");\\n\\n        // Set it to not valid anymore since its done\\n        shipment.valid = false;\\n        shipments[_shipmentId] = shipment;\\n        withdrawableBalance[shipment.courier] += shipment.shipmentCost;\\n    }\\n\\n    /**\\n     * If nobody did anything after the deadline, then the settlement can be made\\n     * Anyone can call this. In the future, you can incentivize by giving a cut to the caller\\n     */\\n    function settle(uint _shipmentId) public {\\n        Shipment memory shipment = shipments[_shipmentId];\\n        require(shipment.valid == true, \\\"Shipment is not valid\\\");\\n        require(shipment.settlementDeadline <= block.number, \\\"Shipment has not expired\\\");\\n\\n        shipment.valid = false;\\n        shipments[_shipmentId] = shipment;\\n\\n        // If fulfilled but receiver didn't disburse, the withdrawable balance opens for the courier\\n        if (fulfilledShipments[_shipmentId]) {\\n            withdrawableBalance[shipment.courier] += shipment.shipmentCost;\\n        }\\n\\n        // If picked up but not fulfilled, the withdrawable balance opens for the sender\\n        if (pickedUpShipments[_shipmentId] && !fulfilledShipments[_shipmentId]) {\\n            withdrawableBalance[shipment.sender] += shipment.shipmentCost;\\n        }\\n    }\\n\\n    /**\\n     * Withdraw balance\\n     */\\n    function withdraw() public {\\n        require(withdrawableBalance[msg.sender] > 0, \\\"No withdrawable balance\\\");\\n        uint amount = withdrawableBalance[msg.sender];\\n        withdrawableBalance[msg.sender] = 0;\\n        payable(msg.sender).transfer(amount);\\n    }\\n}\\n\",\"keccak256\":\"0x8c4bb02a4827e0a5709082bfcf5eb6d28435d006a639b1732f07838b91d15237\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040526040516113af3803806113af83398101604081905261002291610047565b6000600281905560019190915555600780546001600160a01b0319163317905561006b565b6000806040838503121561005a57600080fd5b505080516020909101519092909150565b6113358061007a6000396000f3fe6080604052600436106100e85760003560e01c80636aa7daf31161008a578063a765fbea11610059578063a765fbea14610330578063bd77ac2c1461034f578063e00dd1611461036f578063f15456b51461038557600080fd5b80636aa7daf3146102955780637943a4e7146102a85780638da5cb5b146102d85780638df828001461031057600080fd5b80632ac08a93116100c65780632ac08a93146101825780633ccfd60b14610254578063576922131461026957806360c7dc471461027f57600080fd5b806302b62938146100ed5780630ab8b5fb1461012d5780631a9dcb3514610142575b600080fd5b3480156100f957600080fd5b5061011a6101083660046111a2565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b61014061013b3660046111c4565b610398565b005b34801561014e57600080fd5b5061017261015d366004611200565b60056020526000908152604090205460ff1681565b6040519015158152602001610124565b34801561018e57600080fd5b5061020061019d366004611200565b60036020819052600091825260409091208054600182015460028301549383015460048401546005850154600686015460079096015494969395939492936001600160a01b0392831693918316929081169190811690600160a01b900460ff1689565b60408051998a5260208a01989098529688019590955260608701939093526001600160a01b039182166080870152811660a086015290811660c08501521660e0830152151561010082015261012001610124565b34801561026057600080fd5b5061014061056d565b34801561027557600080fd5b5061011a60005481565b34801561028b57600080fd5b5061011a60015481565b6101406102a3366004611200565b61060a565b3480156102b457600080fd5b506101726102c3366004611200565b60046020526000908152604090205460ff1681565b3480156102e457600080fd5b506007546102f8906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b34801561031c57600080fd5b5061014061032b366004611200565b610907565b34801561033c57600080fd5b5061014061034b366004611219565b5050565b34801561035b57600080fd5b5061014061036a366004611200565b610b91565b34801561037b57600080fd5b5061011a60025481565b610140610393366004611200565b610e40565b823410156103ed5760405162461bcd60e51b815260206004820152601a60248201527f536869706d656e7420636f737420696e73756666696369656e7400000000000060448201526064015b60405180910390fd5b6002805490819060006103ff8361125b565b919050555060008190506000604051806101200160405280838152602001878152602001600054436104319190611274565b815260018054602080840191909152600060408085018290526001600160a01b038b811660608088018290528c83166080808a018290523360a0808c019190915260c09a8b018a90528d88526003808a52978790208c5181558c8a01519a81019a909a558b87015160028b01558b840151978a01979097558a01516004890180549186166001600160a01b0319928316179055958a015160058901805491861691881691909117905597890151600688018054918516919096161790945560e0880151600790960180546101008a01511515600160a01b026001600160a81b0319909116979093169690961791909117909455805188815292830193909352918101929092529192507fed8bc4d3eabf6a4468589c4003ff568b85eef1da79dc436ab5b1b9f55e090f21910160405180910390a1505050505050565b336000908152600660205260409020546105c95760405162461bcd60e51b815260206004820152601760248201527f4e6f20776974686472617761626c652062616c616e636500000000000000000060448201526064016103e4565b33600081815260066020526040808220805490839055905190929183156108fc02918491818181858888f1935050505015801561034b573d6000803e3d6000fd5b60008181526004602052604090205460ff16156106755760405162461bcd60e51b815260206004820152602360248201527f536869706d656e742068617320616c7265616479206265656e207069636b656460448201526202075760ec1b60648201526084016103e4565b60008181526005602052604090205460ff16156106a45760405162461bcd60e51b81526004016103e49061128d565b6001543410156106f65760405162461bcd60e51b815260206004820152601960248201527f5374616b6520616d6f756e7420696e73756666696369656e740000000000000060448201526064016103e4565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff1615156101008301819052146107a45760405162461bcd60e51b81526004016103e4906112d0565b438160400151116107ee5760405162461bcd60e51b815260206004820152601460248201527314da1a5c1b595b9d081a185cc8195e1c1a5c995960621b60448201526064016103e4565b60008281526004602081815260408084208054600160ff199091168117909155336080870181815234606089019081528988526003808752978590208951815589870151948101949094558885015160028501555196830196909655945193810180546001600160a01b03199081166001600160a01b039687161790915560a0870151600583018054831691871691909117905560c087015160068301805490921690861617905560e086015160079091018054610100880151929095166001600160a81b031990951694909417600160a01b91151591909102179092558151858152908101929092527f07ad9f5eac765497cb94cdac99aa0dc0d7cc27c93fb54b1c02a3d48adbb13139910160405180910390a15050565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff1615156101008301819052146109b55760405162461bcd60e51b81526004016103e4906112d0565b4381604001511115610a095760405162461bcd60e51b815260206004820152601860248201527f536869706d656e7420686173206e6f742065787069726564000000000000000060448201526064016103e4565b600061010082018181528382526003602081815260408085208651815582870151600182015581870151600282015560608701519381019390935560808601516004840180546001600160a01b039283166001600160a01b03199182161790915560a0880151600580870180549285169284169290921790915560c0890151600687018054918516919093161790915560e08801516007909501805496511515600160a01b026001600160a81b03199097169590921694909417949094179093555290205460ff1615610b195780602001516006600083608001516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b139190611274565b90915550505b60008281526004602052604090205460ff168015610b46575060008281526005602052604090205460ff16155b1561034b578060200151600660008360a001516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b889190611274565b90915550505050565b60008181526004602052604090205460ff161515600114610bf45760405162461bcd60e51b815260206004820152601960248201527f536869706d656e74206973206e6f74207069636b65642075700000000000000060448201526064016103e4565b60008181526005602052604090205460ff161515600114610c575760405162461bcd60e51b815260206004820152601960248201527f536869706d656e74206973206e6f742066756c66696c6c65640000000000000060448201526064016103e4565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff161515610100830181905214610d055760405162461bcd60e51b81526004016103e4906112d0565b60c08101516001600160a01b03163314610d615760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520726563656976657200000000000060448201526064016103e4565b6000610100820181815283825260036020818152604080852086518155828701516001820181905582880151600283015560608801519482019490945560808701516004820180546001600160a01b039283166001600160a01b0319918216811790925560a08a015160058501805491851691831691909117905560c08a015160068086018054928616929093169190911790915560e08a01516007909401805498511515600160a01b026001600160a81b03199099169490931693909317969096179055938552929052908220805491929091610b88908490611274565b60008181526004602052604090205460ff161515600114610ea35760405162461bcd60e51b815260206004820152601f60248201527f536869706d656e7420686173206e6f74206265656e207069636b65642075700060448201526064016103e4565b60008181526005602052604090205460ff1615610ed25760405162461bcd60e51b81526004016103e49061128d565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff161515610100830181905214610f805760405162461bcd60e51b81526004016103e4906112d0565b43816040015111610fca5760405162461bcd60e51b815260206004820152601460248201527314da1a5c1b595b9d081a185cc8195e1c1a5c995960621b60448201526064016103e4565b60808101516001600160a01b031633146110265760405162461bcd60e51b815260206004820152601960248201527f53656e646572206973206e6f742074686520636f75726965720000000000000060448201526064016103e4565b600082815260056020526040808220805460ff1916600117905560808301516060840151915190926001600160a01b0384169280156108fc02929091818181858888f1935050505015801561107f573d6000803e3d6000fd5b506000838152600360208181526040928390208551815590850151600182015582850151600282015560608501519181019190915560808401516004820180546001600160a01b039283166001600160a01b03199182161790915560a086015160058401805491841691831691909117905560c08601516006840180549184169190921617905560e0850151600790920180546101008701511515600160a01b026001600160a81b03199091169390921692909217179055517f537363b9a51fea93bd842ffdb00c866c81120a6ce2f76037c732ea4d6592b7629061117990859033909182526001600160a01b0316602082015260400190565b60405180910390a1505050565b80356001600160a01b038116811461119d57600080fd5b919050565b6000602082840312156111b457600080fd5b6111bd82611186565b9392505050565b6000806000606084860312156111d957600080fd5b833592506111e960208501611186565b91506111f760408501611186565b90509250925092565b60006020828403121561121257600080fd5b5035919050565b6000806040838503121561122c57600080fd5b8235915061123c60208401611186565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001820161126d5761126d611245565b5060010190565b8082018082111561128757611287611245565b92915050565b60208082526023908201527f536869706d656e742068617320616c7265616479206265656e2066756c66696c6040820152621b195960ea1b606082015260800190565b60208082526015908201527414da1a5c1b595b9d081a5cc81b9bdd081d985b1a59605a1b60408201526060019056fea2646970667358221220067498c0c30ac12f2742513d34413d8e0ec8d05f9432931085e68ff4947e559464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80636aa7daf31161008a578063a765fbea11610059578063a765fbea14610330578063bd77ac2c1461034f578063e00dd1611461036f578063f15456b51461038557600080fd5b80636aa7daf3146102955780637943a4e7146102a85780638da5cb5b146102d85780638df828001461031057600080fd5b80632ac08a93116100c65780632ac08a93146101825780633ccfd60b14610254578063576922131461026957806360c7dc471461027f57600080fd5b806302b62938146100ed5780630ab8b5fb1461012d5780631a9dcb3514610142575b600080fd5b3480156100f957600080fd5b5061011a6101083660046111a2565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b61014061013b3660046111c4565b610398565b005b34801561014e57600080fd5b5061017261015d366004611200565b60056020526000908152604090205460ff1681565b6040519015158152602001610124565b34801561018e57600080fd5b5061020061019d366004611200565b60036020819052600091825260409091208054600182015460028301549383015460048401546005850154600686015460079096015494969395939492936001600160a01b0392831693918316929081169190811690600160a01b900460ff1689565b60408051998a5260208a01989098529688019590955260608701939093526001600160a01b039182166080870152811660a086015290811660c08501521660e0830152151561010082015261012001610124565b34801561026057600080fd5b5061014061056d565b34801561027557600080fd5b5061011a60005481565b34801561028b57600080fd5b5061011a60015481565b6101406102a3366004611200565b61060a565b3480156102b457600080fd5b506101726102c3366004611200565b60046020526000908152604090205460ff1681565b3480156102e457600080fd5b506007546102f8906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b34801561031c57600080fd5b5061014061032b366004611200565b610907565b34801561033c57600080fd5b5061014061034b366004611219565b5050565b34801561035b57600080fd5b5061014061036a366004611200565b610b91565b34801561037b57600080fd5b5061011a60025481565b610140610393366004611200565b610e40565b823410156103ed5760405162461bcd60e51b815260206004820152601a60248201527f536869706d656e7420636f737420696e73756666696369656e7400000000000060448201526064015b60405180910390fd5b6002805490819060006103ff8361125b565b919050555060008190506000604051806101200160405280838152602001878152602001600054436104319190611274565b815260018054602080840191909152600060408085018290526001600160a01b038b811660608088018290528c83166080808a018290523360a0808c019190915260c09a8b018a90528d88526003808a52978790208c5181558c8a01519a81019a909a558b87015160028b01558b840151978a01979097558a01516004890180549186166001600160a01b0319928316179055958a015160058901805491861691881691909117905597890151600688018054918516919096161790945560e0880151600790960180546101008a01511515600160a01b026001600160a81b0319909116979093169690961791909117909455805188815292830193909352918101929092529192507fed8bc4d3eabf6a4468589c4003ff568b85eef1da79dc436ab5b1b9f55e090f21910160405180910390a1505050505050565b336000908152600660205260409020546105c95760405162461bcd60e51b815260206004820152601760248201527f4e6f20776974686472617761626c652062616c616e636500000000000000000060448201526064016103e4565b33600081815260066020526040808220805490839055905190929183156108fc02918491818181858888f1935050505015801561034b573d6000803e3d6000fd5b60008181526004602052604090205460ff16156106755760405162461bcd60e51b815260206004820152602360248201527f536869706d656e742068617320616c7265616479206265656e207069636b656460448201526202075760ec1b60648201526084016103e4565b60008181526005602052604090205460ff16156106a45760405162461bcd60e51b81526004016103e49061128d565b6001543410156106f65760405162461bcd60e51b815260206004820152601960248201527f5374616b6520616d6f756e7420696e73756666696369656e740000000000000060448201526064016103e4565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff1615156101008301819052146107a45760405162461bcd60e51b81526004016103e4906112d0565b438160400151116107ee5760405162461bcd60e51b815260206004820152601460248201527314da1a5c1b595b9d081a185cc8195e1c1a5c995960621b60448201526064016103e4565b60008281526004602081815260408084208054600160ff199091168117909155336080870181815234606089019081528988526003808752978590208951815589870151948101949094558885015160028501555196830196909655945193810180546001600160a01b03199081166001600160a01b039687161790915560a0870151600583018054831691871691909117905560c087015160068301805490921690861617905560e086015160079091018054610100880151929095166001600160a81b031990951694909417600160a01b91151591909102179092558151858152908101929092527f07ad9f5eac765497cb94cdac99aa0dc0d7cc27c93fb54b1c02a3d48adbb13139910160405180910390a15050565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff1615156101008301819052146109b55760405162461bcd60e51b81526004016103e4906112d0565b4381604001511115610a095760405162461bcd60e51b815260206004820152601860248201527f536869706d656e7420686173206e6f742065787069726564000000000000000060448201526064016103e4565b600061010082018181528382526003602081815260408085208651815582870151600182015581870151600282015560608701519381019390935560808601516004840180546001600160a01b039283166001600160a01b03199182161790915560a0880151600580870180549285169284169290921790915560c0890151600687018054918516919093161790915560e08801516007909501805496511515600160a01b026001600160a81b03199097169590921694909417949094179093555290205460ff1615610b195780602001516006600083608001516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b139190611274565b90915550505b60008281526004602052604090205460ff168015610b46575060008281526005602052604090205460ff16155b1561034b578060200151600660008360a001516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610b889190611274565b90915550505050565b60008181526004602052604090205460ff161515600114610bf45760405162461bcd60e51b815260206004820152601960248201527f536869706d656e74206973206e6f74207069636b65642075700000000000000060448201526064016103e4565b60008181526005602052604090205460ff161515600114610c575760405162461bcd60e51b815260206004820152601960248201527f536869706d656e74206973206e6f742066756c66696c6c65640000000000000060448201526064016103e4565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff161515610100830181905214610d055760405162461bcd60e51b81526004016103e4906112d0565b60c08101516001600160a01b03163314610d615760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520726563656976657200000000000060448201526064016103e4565b6000610100820181815283825260036020818152604080852086518155828701516001820181905582880151600283015560608801519482019490945560808701516004820180546001600160a01b039283166001600160a01b0319918216811790925560a08a015160058501805491851691831691909117905560c08a015160068086018054928616929093169190911790915560e08a01516007909401805498511515600160a01b026001600160a81b03199099169490931693909317969096179055938552929052908220805491929091610b88908490611274565b60008181526004602052604090205460ff161515600114610ea35760405162461bcd60e51b815260206004820152601f60248201527f536869706d656e7420686173206e6f74206265656e207069636b65642075700060448201526064016103e4565b60008181526005602052604090205460ff1615610ed25760405162461bcd60e51b81526004016103e49061128d565b600081815260036020818152604092839020835161012081018552815481526001808301549382019390935260028201549481019490945291820154606084015260048201546001600160a01b0390811660808501526005830154811660a08501526006830154811660c085015260079092015491821660e0840152600160a01b90910460ff161515610100830181905214610f805760405162461bcd60e51b81526004016103e4906112d0565b43816040015111610fca5760405162461bcd60e51b815260206004820152601460248201527314da1a5c1b595b9d081a185cc8195e1c1a5c995960621b60448201526064016103e4565b60808101516001600160a01b031633146110265760405162461bcd60e51b815260206004820152601960248201527f53656e646572206973206e6f742074686520636f75726965720000000000000060448201526064016103e4565b600082815260056020526040808220805460ff1916600117905560808301516060840151915190926001600160a01b0384169280156108fc02929091818181858888f1935050505015801561107f573d6000803e3d6000fd5b506000838152600360208181526040928390208551815590850151600182015582850151600282015560608501519181019190915560808401516004820180546001600160a01b039283166001600160a01b03199182161790915560a086015160058401805491841691831691909117905560c08601516006840180549184169190921617905560e0850151600790920180546101008701511515600160a01b026001600160a81b03199091169390921692909217179055517f537363b9a51fea93bd842ffdb00c866c81120a6ce2f76037c732ea4d6592b7629061117990859033909182526001600160a01b0316602082015260400190565b60405180910390a1505050565b80356001600160a01b038116811461119d57600080fd5b919050565b6000602082840312156111b457600080fd5b6111bd82611186565b9392505050565b6000806000606084860312156111d957600080fd5b833592506111e960208501611186565b91506111f760408501611186565b90509250925092565b60006020828403121561121257600080fd5b5035919050565b6000806040838503121561122c57600080fd5b8235915061123c60208401611186565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60006001820161126d5761126d611245565b5060010190565b8082018082111561128757611287611245565b92915050565b60208082526023908201527f536869706d656e742068617320616c7265616479206265656e2066756c66696c6040820152621b195960ea1b606082015260800190565b60208082526015908201527414da1a5c1b595b9d081a5cc81b9bdd081d985b1a59605a1b60408201526060019056fea2646970667358221220067498c0c30ac12f2742513d34413d8e0ec8d05f9432931085e68ff4947e559464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pickUpShipment(uint256)": {
        "details": "Pickup a shipment"
      },
      "requestShipment(uint256,address,address)": {
        "details": "Request a shipment"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "completeShipment(uint256)": {
        "notice": "TODO: Add attestations "
      },
      "disburse(uint256)": {
        "notice": "Called by the receiver. Only if the receiver is happy with the shipment, the courier gets paid."
      },
      "dispute(uint256,address)": {
        "notice": "Receiver or courier is unhappy, can file a dispute"
      },
      "settle(uint256)": {
        "notice": "If nobody did anything after the deadline, then the settlement can be made Anyone can call this. In the future, you can incentivize by giving a cut to the caller"
      },
      "withdraw()": {
        "notice": "Withdraw balance"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "settlementDuration",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "stakeAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "currentId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "shipments",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Shipment)45_storage)"
      },
      {
        "astId": 16,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "pickedUpShipments",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 20,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "fulfilledShipments",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 24,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "withdrawableBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 26,
        "contract": "contracts/DeDe.sol:DeDe",
        "label": "owner",
        "offset": 0,
        "slot": "7",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Shipment)45_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DeDe.Shipment)",
        "numberOfBytes": "32",
        "value": "t_struct(Shipment)45_storage"
      },
      "t_struct(Shipment)45_storage": {
        "encoding": "inplace",
        "label": "struct DeDe.Shipment",
        "members": [
          {
            "astId": 28,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 30,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "shipmentCost",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "settlementDeadline",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "stake",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 36,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "courier",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 38,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "sender",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 40,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "receiver",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 42,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "paidBy",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 44,
            "contract": "contracts/DeDe.sol:DeDe",
            "label": "valid",
            "offset": 20,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}